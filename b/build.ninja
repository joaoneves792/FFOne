# This is the build file for project "tutorial"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule c_PCH
 command = cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.

rule cpp_COMPILER
 command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out.

rule cpp_PCH
 command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.

rule c_CROSS_COMPILER
 command = i686-w64-mingw32-gcc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule c_CROSS_PCH
 command = i686-w64-mingw32-gcc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.

rule cpp_CROSS_COMPILER
 command = i686-w64-mingw32-g++ $ARGS -Wno-non-virtual-dtor -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out.

rule cpp_CROSS_PCH
 command = i686-w64-mingw32-g++ $ARGS -Wno-non-virtual-dtor -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.


# Rules for linking.

rule STATIC_CROSS_LINKER
 command =  rm -f $out && i686-w64-mingw32-ar $LINK_ARGS $out $in
 description = Linking static target $out.

rule STATIC_LINKER
 command =  rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.

rule c_CROSS_LINKER
 command = i686-w64-mingw32-gcc $ARGS -o $out $in $LINK_ARGS -static -static-libgcc $aliasing
 description = Linking target $out.

rule cpp_CROSS_LINKER
 command = i686-w64-mingw32-g++ $ARGS -o $out $in $LINK_ARGS -static -static-libgcc -static-libstdc++ -Wl,--add-stdcall-alias,--enable-stdcall-fixup,--subsystem,windows -ldinput8 -ldinput -ldxguid $aliasing
 description = Linking target $out.


rule SHSYM
 command = /usr/bin/meson --internal symbolextractor $in $out $CROSS
 restat = 1
 description = Generating symbol file $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule CUSTOM_COMMAND_DEP
 command = $COMMAND
 description = $DESC
 deps = gcc
 depfile = $DEPFILE
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/joao/workspace/tmp2/meson_test /home/joao/workspace/tmp2/meson_test/b --backend ninja
 description = Regenerating build files.
 generator = 1


# Phony build target, always out of date
build PHONY: phony

# Build rules for targets

build fftest@exe/main.cpp.obj: cpp_CROSS_COMPILER ../main.cpp
 DEPFILE = fftest@exe/main.cpp.obj.d
 ARGS = -Ifftest@exe -I. -I.. -fdiagnostics-color=always -pipe -Wall -Winvalid-pch -Wnon-virtual-dtor -g

build fftest@exe/rf2Effect.cpp.obj: cpp_CROSS_COMPILER ../rf2Effect.cpp
 DEPFILE = fftest@exe/rf2Effect.cpp.obj.d
 ARGS = -Ifftest@exe -I. -I.. -fdiagnostics-color=always -pipe -Wall -Winvalid-pch -Wnon-virtual-dtor -g

build fftest.exe: cpp_CROSS_LINKER fftest@exe/main.cpp.obj fftest@exe/rf2Effect.cpp.obj | /usr/i686-w64-mingw32/lib/libkernel32.a /usr/i686-w64-mingw32/lib/libuser32.a /usr/i686-w64-mingw32/lib/libgdi32.a /usr/i686-w64-mingw32/lib/libwinspool.a /usr/i686-w64-mingw32/lib/libshell32.a /usr/i686-w64-mingw32/lib/libole32.a /usr/i686-w64-mingw32/lib/liboleaut32.a /usr/i686-w64-mingw32/lib/libuuid.a /usr/i686-w64-mingw32/lib/libcomdlg32.a /usr/i686-w64-mingw32/lib/libadvapi32.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,--start-group -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -Wl,--end-group

build FFOne@sha/FFOnePlugin.c.obj: c_CROSS_COMPILER ../FFOnePlugin.c
 DEPFILE = FFOne@sha/FFOnePlugin.c.obj.d
 ARGS = -IFFOne@sha -I. -I.. -fdiagnostics-color=always -pipe -Wall -Winvalid-pch -g

build FFOne@sha/libFFOne.dll.symbols: SHSYM libFFOne.dll
 CROSS = --cross-host=windows

build libFFOne.dll: c_CROSS_LINKER FFOne@sha/FFOnePlugin.c.obj | /usr/i686-w64-mingw32/lib/libkernel32.a /usr/i686-w64-mingw32/lib/libuser32.a /usr/i686-w64-mingw32/lib/libgdi32.a /usr/i686-w64-mingw32/lib/libwinspool.a /usr/i686-w64-mingw32/lib/libshell32.a /usr/i686-w64-mingw32/lib/libole32.a /usr/i686-w64-mingw32/lib/liboleaut32.a /usr/i686-w64-mingw32/lib/libuuid.a /usr/i686-w64-mingw32/lib/libcomdlg32.a /usr/i686-w64-mingw32/lib/libadvapi32.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -shared -Wl,--start-group -Wl,--out-implib=libFFOne.dll.a -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson --internal dist /home/joao/workspace/tmp2/meson_test /home/joao/workspace/tmp2/meson_test/b /usr/bin/meson
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild /home/joao/workspace/tmp2/meson_test /home/joao/workspace/tmp2/meson_test/b /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony fftest.exe libFFOne.dll

default all

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = ninja -t clean
 description = Cleaning.

build build.ninja: REGENERATE_BUILD ../meson.build /home/joao/workspace/tmp2/meson_test/build-win32 meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build /home/joao/workspace/tmp2/meson_test/build-win32 meson-private/coredata.dat: phony 

